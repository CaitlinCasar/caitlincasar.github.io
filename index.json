[{"authors":["admin"],"categories":null,"content":"I\u0026rsquo;m a data scientist interested in astrobiology.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://www.caitlincasar.com/author/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/","section":"authors","summary":"I\u0026rsquo;m a data scientist interested in astrobiology.","tags":null,"title":"","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"https://www.caitlincasar.com/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":["Casar, C. P., Kruger, B. K., Osburn, M. R."],"categories":null,"content":"Supplementary code.\n","date":1617926400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617926400,"objectID":"cac289ae6d2a7a898275c0ee82c726e3","permalink":"https://www.caitlincasar.com/publication/casar2021/","publishdate":"2020-04-09T00:00:00Z","relpermalink":"/publication/casar2021/","section":"publication","summary":"The continental deep subsurface is likely the largest reservoir of biofilm-based microbial biomass on Earth, but the role of mineral selectivity in regulating its distribution and diversity is unclear. Minerals can produce hotspots for intraterrestrial life by locally enhancing biofilm biomass. Metabolic transformations of minerals by subsurface biofilms may occur widely with the potential to significantly impact subsurface biogeochemical cycles. However, the degree of impact depends upon the amount of biofilm biomass and its relationship to host rock mineralogy, estimates that are currently loosely constrained to non-existent. Here, we use in situ cultivation of biofilms on native rocks and coupled microscopy/spectroscopy to constrain mineral selectivity by biofilms in a deep continental subsurface setting: the Deep Mine Microbial Observatory (DeMMO). Through hotspot analysis and spatial modeling approaches we find that mineral distributions, particularly those putatively metabolized by microbes, indeed drive biofilm distribution at DeMMO, and that bioleaching of pyrite may be a volumetrically important process influencing fluid geochemistry at this site when considered at the kilometer scale. Given the ubiquity of iron-bearing minerals at this site and globally, and the amount of biomass they can support, we posit that rock-hosted biofilms likely contribute significantly to subsurface biogeochemical cycles. As more data becomes available, future efforts to estimate biomass in the continental subsurface should incorporate host rock mineralogy.","tags":["Geobiology","Astrobiology","Biofilms"],"title":"Rock-Hosted Subsurface Biofilms: Mineral Selectivity Drives Hotspots for Intraterrestrial Life","type":"publication"},{"authors":null,"categories":["Adobe"],"content":"  Hello! Today I want to share a quick tutorial on how to use a green screen in Adobe Premiere Pro! Premiere Pro is a video editor in the Adobe Creative Cloud suite that‚Äôs got a ton of great features that make movie making a breeze! I wanted to try out using a green screen because I‚Äôm working on a video of my PhD defense. Due to COVID I can‚Äôt defend in person, so I thought I‚Äôd try to have some fun with special effects! First I‚Äôll go through the equipment I used and then I‚Äôll show you how to replace your green screen background in Adobe. Green Screen  This is a green screen I bought on Amazon. I chose this green screen because I wanted to be able to use it anywhere in my apartment, sitting or standing. Green screen from Amazon.  The dimensions are 5‚Äôx7‚Äô and you can hang it either landscape or portrait orientation on a telescoping tripod. The tripod height is adjustable and easy to set up. Landscape and portrait orientations with Chris for scale.  The other thing I love about this green screen is that you can fold it up so it doesn‚Äôt take up much space. It‚Äôs double-sided with green on one side and blue on the other, and it‚Äôs very lightweight. The folded up green screen fits in my closet.  Ring Light I also bought this ring light on Amazon because the green screen works best when your background has no shadows. The ring light is on a telescoping tripod so the height is adjustable and can be used sitting or standing.\nRing light with Chris for scale. The ring light has controls for three different light colors from cool to warm and brightness levels. There‚Äôs also a bluetooth controller that you can use for the shutter on your phone camera if you want to take selfies!\nRing light cool and warm colors, light controller, and bluetooth shutter controller.  Adobe Premiere Pro  And now for my super quick green screen tutorial in Premiere Pro! Check out the video below to see how I set the green screen background to transparent and layered my videos for a cool background effect. I‚Äôm a noob myself so if you have tips please share them in the comments section on this page below!   I hope you enjoyed this tutorial, feel free to comment below with any comments/questions! üòé  ","date":1613268736,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1613268736,"objectID":"59e49a58bce9043587e0b6beac4059a3","permalink":"https://www.caitlincasar.com/post/greenscreen/","publishdate":"2021-02-13T21:12:16-05:00","relpermalink":"/post/greenscreen/","section":"post","summary":"Hello! Today I want to share a quick tutorial on how to use a green screen in Adobe Premiere Pro! Premiere Pro is a video editor in the Adobe Creative Cloud suite that‚Äôs got a ton of great features that make movie making a breeze!","tags":["Premiere Pro","Adobe"],"title":"Using a Green Screen in Premiere Pro","type":"post"},{"authors":["Rowe, A. R., Abuyen, K., Lam, B. R., Kruger, B. K., Casar, C. P., Osburn, M. R., El-Naggar, M. Y., Amend, J. P."],"categories":null,"content":"","date":1605312000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1605312000,"objectID":"66e20ba841b8d9584e455d2839610f48","permalink":"https://www.caitlincasar.com/publication/rowe2020/","publishdate":"2020-11-14T00:00:00Z","relpermalink":"/publication/rowe2020/","section":"publication","summary":"The subsurface is Earth's largest reservoir of biomass. Micro‚Äêorganisms are the dominant lifeforms in this habitat, but the nature of their in situ activities remains largely unresolved. At the Deep Mine Microbial Observatory (DeMMO) located in the Sanford Underground Research Facility (SURF) in Lead, South Dakota (USA), we performed in situ electrochemical incubations designed to assess the potential for deep groundwater microbial communities to utilize extracellular electron transfer to support microbial respiration. DeMMO 4 was chosen for its stable geochemistry and microbial community. Graphite and indium tin oxide electrodes poised at ‚àí200 mV versus SHE were incubated along with open circuit controls and various minerals in a parallel flow reactor that split access to fluids across different treatments. From the patterns of net current over time (fluctuating between anodic and cathodic currents over the course of a few days to weeks) and the catalytic features measured using periodic cyclic voltammetry, evidence of both oxidative and reductive microbe‚Äêelectrode interactions was observed. The predominant catalytic activity ranged from ‚àí210 to ‚àí120 mV. The observed temporal variability in electrochemical activity was unexpected given the documented stability in major geochemical parameters. This suggests that the accessed fluids are more heterogeneous in electrochemically active microbial populations than previously predicted from the stable community composition. As previously reported, the fracture fluid and surface‚Äêattached microbial communities at SURF differed significantly. However, only minimal differences in community composition were observed between poised potential electrodes, open circuit electrodes, and mineral incubations. These data support that in this environment the ability to attach to surfaces is a stronger driver of microbial community structure than the type or reactivity of the surface. We demonstrate that insight into specific activities can be gained from electrochemical methods, specifically chronoamperometry coupled with routine cyclic voltammetry, which provide a sensitive approach to evaluate microbial activities in situ.","tags":["Geobiology","Astrobiology","Biofilms"],"title":"Electrochemical evidence for in situ microbial activity at the Deep Mine Microbial Observatory (DeMMO), South Dakota, USA","type":"publication"},{"authors":null,"categories":["Python"],"content":" Today we‚Äôre going on a Python adventure using Jupyter notebooks and PyCharm! First, let‚Äôs talk about what these are. Jupyter Notebook is a web application where you can create interactive coding documents, supporting many programming languages including both Python and R as well as Markdown. PyCharm is an amazing IDE (interactive development environment) for Python that has tools and plugins to help you code more efficiently. You can develop your code both locally and remotely using PyCharm. First, let‚Äôs get set up!\nGetting started with PyCharm  Install PyCharm.I highly recommend installing PyCharm Professional because you get more features like SciView that are awesome for data science. Plus PyCharm Professional is free for students!   Install Python if you don‚Äôt already have it - you‚Äôll need an interpreter in order to use PyCharm! Be aware that Python 2 and Python 3 are different in terms of syntax - don‚Äôt worry, you can load either version in PyCharm when you start a new project. If this is your first time developing in Python, I recommend going with the latest version 3.8.3.   Create a new project in PyCharm and select your local Python interpreter. Here, I created a new project called ‚Äòpycharm‚Äô in a directory on my desktop and selected Python 3.7 as my interpreter.    Install Jupyter by selecting PyCharm \u0026gt;\u0026gt; Preferences \u0026gt;\u0026gt; Project Interpreter, then click the ‚Äú+‚Äù button to add new packages.    Then type ‚Äòjupyter‚Äô and select jupyter from the packages list. Then click the ‚ÄòInstall Package‚Äô button at the bottom of the window.  Create a new Jupyter notebook by navigating to File \u0026gt;\u0026gt; New‚Ä¶ and selecting ‚ÄòJupyter Notebook‚Äô. Alternatively, if you just want to create a Python script you can select ‚ÄòPython File‚Äô. Here, I created a new notebook called pycharm.ipynb.    Let‚Äôs start editing our notebook by adding a Markdown cell. In the editor next to the ‚Äò#%‚Äô, add ‚Äòmd‚Äô to set the cell type to Markdown. Then use Markdown formatting, such as ‚Äò### Header‚Äô like in my example here. Notice that the right side panel displays a preview of your notebook.    Now let‚Äôs add a coding cell. Click the ‚Äò+‚Äô button just below the Markdown cell to add a new cell. Add your code and click the green arrow to run the code in the cell.    Here I created and printed a variable called my_string.  Let‚Äôs check out a cool feature of PyCharm Scientific View. Add the following to a code cell and run it:   import pandas as pd #read in data from my github repo data = pd.read_csv(\u0026quot;https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/site_geochem.csv\u0026quot;) data.head()  Next, open your Jupyter tab at the bottom of your PyCharm window, click on the variables tab, and right click on the new variable you just created called ‚Äòdata‚Äô. Select ‚ÄòView as Dataframe‚Äô, then click on the ‚ÄòSciView‚Äô tab on the right panel.    This is a great feature for viewing your stored variables. You can view both dataframes and arrays with SciView.  Let‚Äôs try launching this notebook in our browser. Click on the text at the bottom of your PyCharm window that says ‚ÄúJupyter Server started at http://localhost:8888// Open in Browser‚Äù. You should see an Event Log window pop up in the bottom right panel. Click on ‚ÄúOpen in Browser‚Äù to launch your notebook in your web browser.    You should now see something like this in your browser:  Click on the notebook to run your code in the browser window. You can run cells by clicking the Run button in the top tool bar, or by clicking Ctrl + Enter.  Sync files with a remote server  Let‚Äôs say you want to sync files on a remote server. You‚Äôll need to set up your file transfer protocol. Select Tools \u0026gt;\u0026gt; Deployment \u0026gt;\u0026gt; Browse Remote Host. Then select your protocol - here I chose SFTP (secure file transfer protocol).    Next, configure your connection to the remote host by adding your IP address and log in credentials. Optionally, set your root path to the path on the remote server where you want to access files.    Click on the Mapping tab and set your local path to your project directory in PyCharm. Set the deployment path to the directory on the remote server where you want to access or upload files.    Sync your local directory with the remote directory by right-clicking on your project in the left panel, then select Deployment \u0026gt;\u0026gt; Sync with Deployed To‚Ä¶   Then click the green double arrow button ‚ÄúSynchronize All‚Äù to sync your files. You can use the ‚ÄòRemote Host‚Äô tab on the right panel to view your remote file tree.  Run a remote Jupyter server kernel  If you want to run an interactive Jupyter notebook on a remote server in PyCharm, you‚Äôll need to set up your Jupyter server configuration and remote Python interpreter.  In the terminal, SSH into your remote server, navigate to the directory where your data is, then launch a Jupyter notebook.    Navigate to the directory where your data is located. Then launch a jupyter notebook by running the following:   #replace port number with whatever port you want jupyter notebook --port=8899 --no-browser  This will return a url and token, similar to: https://my-notebook/tree/?token=abcdef...  Copy this entire url and token. Make sure you copy it all from one line - I have to make my terminal full screen for this. Otherwise you might get a weird line break and your url/token might not work.  Open a new Jupyter notebook file and select ‚ÄòConfigure jupyter server‚Ä¶‚Äô.    Paste your url and token in the field for ‚ÄòConfigured Server‚Äô. Then click ‚ÄòApply‚Äô.  You should now be able to access data on the remote server in your Jupyter notebook. Here, I cloned my repo on the remote server, and I‚Äôm accessing a csv file with the pandas library.    If you want to use an interpreter on the remote server, you can figure the interpreter by naviating to Pycharm \u0026gt;\u0026gt; Preferences \u0026gt;\u0026gt; Project Interpreter‚Ä¶, then select the wheel button next to your current interpreter and select ‚ÄòAdd‚Ä¶‚Äô. Then select ‚ÄòSSH interpreter‚Äô and choose ‚ÄòExisting server configuration‚Äô. From the dropdown menu, select the SSH configuration that you set up in step 2 of the ‚ÄòSync files with a remote server‚Äô above.    Note:Unfortunately, you cannot view your variables while using a remote Jupyter server kernel as documented here.  Congrats on developing in Jupyter Notebooks and PyCharm! I hope you enjoyed this tutorial, feel free to comment below with any comments/questions! üòé  ","date":1593828736,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593828736,"objectID":"8dd330f4aa6ee070883fe5c8a88d74f6","permalink":"https://www.caitlincasar.com/post/pycharm/","publishdate":"2020-07-03T21:12:16-05:00","relpermalink":"/post/pycharm/","section":"post","summary":"Today we‚Äôre going on a Python adventure using Jupyter notebooks and PyCharm! First, let‚Äôs talk about what these are. Jupyter Notebook is a web application where you can create interactive coding documents, supporting many programming languages including both Python and R as well as Markdown.","tags":["PyCharm","Jupyter"],"title":"Jupyter notebooks in PyCharm","type":"post"},{"authors":null,"categories":["R"],"content":"  Today I‚Äôll show you how to spice up your presentations with revealJS in R. This is an HTML presentation framework that allows you to share your slides on the web, add custom animations, embed websites into your slides, and more! Here‚Äôs an example of a presentation I made for my 2020 Spring Committee Meeting:   This presentation was a lot of fun to make! Here I‚Äôll show you the basics, then I‚Äôll give examples of more advanced stuff you can do.  First, we need to get set up to use revealjs in R. Open RStudio and run the following in your console:   install.packages(\u0026quot;revealjs\u0026quot;, type = \u0026quot;source\u0026quot;)  Next, open up a new R markdown document.    Select the HTML output in the pop-up window and give your document a title.    Then modify your header content. To make my slides in the example above, I used this header:   --- output: revealjs::revealjs_presentation: transition: default self_contained: false reveal_plugins: notes css: styles.css center: true mathjax: NULL ---  Here‚Äôs a breakdown of those parameters:   Output indicates that you want a revealjs output.   Transition sets your slide transitions. You can choose from ‚Äúdefault‚Äù, ‚Äúfade‚Äù, ‚Äúslide‚Äù, ‚Äúconvex‚Äù, ‚Äúconcave‚Äù, ‚Äúzoom‚Äù or ‚Äúnone‚Äù.   Self contained determines whether dependencies are external or internal. To use plugins this has to be set to false.   Reveal plugins enable plugins including notes, zoom, search, and chalkboard. The notes plugin functions much like presenter mode in Powerpoint.   CSS is your custom styles CSS (cascading style sheet) file. This allows you to add styling to HTML elements, such as font color, add animations, and more.   Center sets all of your slides to center text alignment. You can set the alignment on individual slides as well.   Mathjax enables rendering of LaTeX and MathML equations including special characters like greek symbols. Options include default, local, and NULL.   Now, lets add some slides!:  --- output: revealjs::revealjs_presentation: transition: default self_contained: false reveal_plugins: notes css: styles.css center: true mathjax: NULL --- # This is my title slide # This is Section 1 ## This is the first slide in Section 1 # This is Section 2 ## This is the first slide in Section 2  Once your slides are ready, click the Knit button to build the html output and preview your slides!  The code above produces the following slides:   Let‚Äôs add some style to the slides. We can add a background color, background image, or embed an html file as the background! Be aware of potential securtiy issues when embedding an external website - you should only do this if you trust the site! Here, I added different types of backgrounds on each slide, including image, video, html, and color:   --- output: revealjs::revealjs_presentation: transition: default self_contained: false reveal_plugins: notes css: styles.css center: true mathjax: NULL --- # {data-background=\u0026quot;https://images.pexels.com/photos/949587/pexels-photo-949587.jpeg?auto=compress\u0026amp;cs=tinysrgb\u0026amp;dpr=2\u0026amp;w=500\u0026quot;} \u0026lt;h1 style=\u0026quot;color: #fff\u0026quot;\u0026gt;Caitlin\u0026#39;s Presentation\u0026lt;/h1\u0026gt; # {data-background=#262626} \u0026lt;h1 style=\u0026quot;color: #fff\u0026quot;\u0026gt;Check out my website\u0026lt;/h1\u0026gt; ## {data-background-iframe=\u0026quot;https://www.caitlincasar.com\u0026quot;} # Check out this video I made ## \u0026lt;iframe width=\u0026quot;100%\u0026quot; height=\u0026quot;500\u0026quot; src=\u0026quot;https://www.youtube.com/embed/FZ66_XqZZhg\u0026quot; frameborder=\u0026quot;0\u0026quot; allow=\u0026quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\u0026quot; allowfullscreen\u0026gt;\u0026lt;/iframe\u0026gt; ## {data-background-video=\u0026quot;AreWeAlone_Corrected.mp4\u0026quot;}   Note: This example doesn‚Äôt include the last slide in the example Rmarkdown above due to file size limits on Github where I host my content.  Let‚Äôs add some fun styling with CSS! Open a new text file and name it styles.css. Save this in the same directory as your Rmarkdown file.    Add some styling to the h1 element - these are the headers in your slide. Here, I‚Äôm changing the font color and adding a cool animation. .present .tracking-in-expand { -webkit-animation: tracking-in-expand 0.7s cubic-bezier(0.215, 0.610, 0.355, 1.000) both; animation: tracking-in-expand 0.7s cubic-bezier(0.215, 0.610, 0.355, 1.000) both; } @-webkit-keyframes tracking-in-expand { 0% { letter-spacing: -0.5em; opacity: 0; } 40% { opacity: 0.6; } 100% { opacity: 1; } } @keyframes tracking-in-expand { 0% { letter-spacing: -0.5em; opacity: 0; } 40% { opacity: 0.6; } 100% { opacity: 1; } } h1 { color: #262626; -webkit-animation: tracking-in-expand 0.7s cubic-bezier(0.215, 0.610, 0.355, 1.000) infinite both; animation: tracking-in-expand 0.7s cubic-bezier(0.215, 0.610, 0.355, 1.000) infinite both; }  This is the Rmarkdown content I used to produce the slide below: --- output: revealjs::revealjs_presentation: transition: default self_contained: false reveal_plugins: notes css: styles.css center: true mathjax: NULL --- # {data-background=#262626} \u0026lt;h1 style=\u0026quot;color: #fff\u0026quot;\u0026gt;Caitlin\u0026#39;s Presentation\u0026lt;/h1\u0026gt;   Here‚Äôs an example where I used both custom CSS and a custom html header: @-webkit-keyframes color-change-5x { 0% { color: #19dcea; } 25% { color: #b22cff; } 50% { color: #ea2222; } 75% { color: #f5be10; } 100% { color: #3bd80d; } } @keyframes color-change-5x { 0% { color: #19dcea; } 25% { color: #b22cff; } 50% { color: #ea2222; } 75% { color: #f5be10; } 100% { color: #3bd80d; } } #title h1 { font-size: 1.50em; color: #ffff00; font-family: \u0026#39;Roboto\u0026#39;, sans-serif !important; -webkit-animation: color-change-5x 8s linear infinite alternate both; animation: color-change-5x 8s linear infinite alternate both; } .color-change-5x-background { -webkit-animation: color-change-5x-background 2s linear infinite alternate both; animation: color-change-5x-background 2s linear infinite alternate both; } @-webkit-keyframes color-change-5x-background { 0% { background: #19dcea; } 25% { background: #b22cff; } 50% { background: #ea2222; } 75% { background: #f5be10; } 100% { background: #3bd80d; } } @keyframes color-change-5x-background { 0% { background: #19dcea; } 25% { background: #b22cff; } 50% { background: #ea2222; } 75% { background: #f5be10; } 100% { background: #3bd80d; } }  I added custom font from Google fonts by creating a new text file called header.html and adding this to the file: \u0026lt;link href=\u0026quot;https://fonts.googleapis.com/css2?family=Roboto:wght@900\u0026amp;display=swap\u0026quot; rel=\u0026quot;stylesheet\u0026quot;\u0026gt;  This is the Rmarkdown file I used to produce the slides below: --- output: revealjs::revealjs_presentation: transition: default self_contained: false reveal_plugins: notes css: styles.css in_header: header.html center: true mathjax: NULL --- # {#title data-background=#262626} \u0026lt;h1 style=\u0026quot;color: #fff\u0026quot;\u0026gt;Caitlin\u0026#39;s Presentation\u0026lt;/h1\u0026gt; # Rainbow background! {.color-change-5x-background}   As you can see, there‚Äôs a ton of cool stuff you can do with revealjs! Check out the official documentation for more information, and check out this guide for more info on Rmarkdown.  Congrats on making awesome slides in revealjs! üòé Feel free to comment below with any comments/questions! ","date":1593302400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593302400,"objectID":"deaa1d9d7890d930ed042e99ab2993dd","permalink":"https://www.caitlincasar.com/post/revealjs/","publishdate":"2020-06-28T00:00:00Z","relpermalink":"/post/revealjs/","section":"post","summary":"Today I‚Äôll show you how to spice up your presentations with revealJS in R. This is an HTML presentation framework that allows you to share your slides on the web, add custom animations, embed websites into your slides, and more!","tags":["revealjs","CSS","HTML","javascript"],"title":"Making beautiful interactive slides with revealJS","type":"post"},{"authors":null,"categories":["R"],"content":"     Are you curious what sorts of metabolic processes might be occurring at your study site? Using in situ geochemical data, you can model the Gibbs free energy available from metabolic reactions and predict which metabolisms are energetically favorable! Gibbs free energy can be modeled using the following equation: \\[\\Delta G_r - RT ln \\frac{K_r}{Q_r }\\]\n where \\(\\Delta G_r\\) is the Gibbs energy of reaction r under in situ conditions, \\(K_r\\) and \\(Q_r\\) are the equillibrium constant and activity product of the rth reaction, R is the gas constant, and T is temperature in Kelvin.  \\(Q_r\\) can be calculated using the following equation: \\[Q_r = \\prod a_i ^{v_{i,r}}\\]  where \\(a_i\\) is the activity of the ith species and \\(v_{i,r}\\) is the stoichiometric coefficient of the ith species in the rth reaction.  For this tutorial I‚Äôm using data and code from my publication in Geobiology. We calculated activity coefficients for each species of interest using Spece8 in Geochemist‚Äôs Workbench using geochemical data collected from our field site. Then we used the CHNOSZ package to calculate Gibbs free energy of various metabolic reactions. First, let‚Äôs check out what the activity data looks like. #load tidyverse library pacman::p_load(tidyverse) activities \u0026lt;- read_csv(\u0026quot;https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/DeMMO_SpecE8_aqueousGas.csv\u0026quot;)  {\"x\":{\"url\":\"/post/thermodynamic_modeling/index_files/figure-html//widgets/widget_unnamed-chunk-2.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}  You can see we calculated activites for Ca2+, acetate, CH4, Fe2+, H+, HCO3-, HS-, Mn2+, NH4+, NO2-, NO3-, and SO42- at six different sites called DeMMO1-6.  Once you have your activity coefficients, then you need to decide what reactions you want to model. I was interested in metabolic reactions with minerals, so I created a spreadsheet of balanced reactions with minerals and aqueous species available in situ. Let‚Äôs load this data and preview it here. #import DeMMO mineral reactions reactions \u0026lt;- read_csv(\u0026quot;https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/reactions_aq_gas.csv\u0026quot;) %\u0026gt;% filter(!product.f == \u0026quot;manganite\u0026quot;) #removing reactions with manganite because we don\u0026#39;t have equation of state data for this   {\"x\":{\"url\":\"/post/thermodynamic_modeling/index_files/figure-html//widgets/widget_unnamed-chunk-4.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}  The formatting of this data is important for compatability with CHNOSZ, so make sure you include the details I‚Äôm showing here when you balance your reactions. Notice that the reactant stoichiometric coefficients are negative because they‚Äôre on the left side of the reaction, while products are positive because they‚Äôre on the right side of the reaction. Now we‚Äôre ready to model Gibbs free energy from these reactions in CHNOSZ! First we‚Äôll load the CHNOSZ library. #load the CHNOSZ library pacman::p_load(CHNOSZ) Let‚Äôs take a look at the available species for modeling reactions in the CHNOSZ database:\nthermo_db \u0026lt;- thermo()$obigt %\u0026gt;% as_tibble()  {\"x\":{\"url\":\"/post/thermodynamic_modeling/index_files/figure-html//widgets/widget_unnamed-chunk-7.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]} A few minerals that I was interested in were missing in the database, but that‚Äôs ok! If you have the Gibbs free energy available at stadard conditions and the equation of state data for your reactant, you can add it to the CHNOSZ database. Let‚Äôs add pyrolusite and ferrihydrite with the mod.obigt function!\n#add pyrolusite to database pyrolusite \u0026lt;- mod.obigt(\u0026quot;pyrolusite\u0026quot;, G=-111100, H=-124283, S=12.61, V=17.3, formula=\u0026quot;MnO2\u0026quot;, state=\u0026quot;cr\u0026quot;, a1.a=12.55, a2.b=9.761, a3.c=-2.105) #add ferrihydrite to database ferrihydrite \u0026lt;- mod.obigt(\u0026quot;ferrihydrite\u0026quot;, G=-111200, H=-127800, S=16.7, V=20.88, formula=\u0026quot;FeOOH\u0026quot;, state=\u0026quot;cr\u0026quot;, a1.a=8.70, a2.b=36.71, a3.c=-1.0146) You can set your temperature and energy units like this:\n#set temperature units to Kelvin T.units(\u0026quot;K\u0026quot;) #set energy units to joules E.units(\u0026quot;J\u0026quot;) Let‚Äôs calculate logK:\nlogK \u0026lt;- reactions %\u0026gt;% pivot_longer(reactant.a:state.i, names_to = c(\u0026quot;.value\u0026quot;, \u0026quot;set\u0026quot;), names_pattern = \u0026quot;(.+).(.+)\u0026quot;) %\u0026gt;% #pivot from wide to long dataframe unite(\u0026quot;react_prod\u0026quot;, reactant:product, na.rm = TRUE, remove = F) %\u0026gt;% #unite the reactants and products into one column filter(!react_prod == \u0026quot;\u0026quot;) %\u0026gt;% #remove any rows with missing react_prod values group_by(rxn.number) %\u0026gt;% #group by reaction number for calculations summarise(DeMMO1 = subcrt(react_prod, coeff, state, T=283.45)$out$logK,#calculate logK using in situ DeMMO1 temperature for all other reactions DeMMO2 = subcrt(react_prod, coeff, state, T=285.55)$out$logK, DeMMO3 = subcrt(react_prod, coeff, state, T=289.35)$out$logK, DeMMO4 = subcrt(react_prod, coeff, state, T=295.65)$out$logK, DeMMO5= subcrt(react_prod, coeff, state, T=304.85)$out$logK, DeMMO6 = subcrt(react_prod, coeff, state, T=294.65)$out$logK) %\u0026gt;% pivot_longer(cols = DeMMO1:DeMMO6, names_to = \u0026quot;Site\u0026quot;, values_to = \u0026quot;LogK\u0026quot;) %\u0026gt;% #pivot from wide to long for merging later distinct() #remove the duplicate rows  Now we need to calculate logQ:\nactivities \u0026lt;- activities %\u0026gt;% pivot_longer(`Ca+2`:CO, names_to = \u0026quot;react_prod\u0026quot;, values_to = \u0026quot;activity\u0026quot;) #pivot from wide to long for joining logQ \u0026lt;- reactions %\u0026gt;% pivot_longer(reactant.a:state.i, names_to = c(\u0026quot;.value\u0026quot;, \u0026quot;set\u0026quot;), names_pattern = \u0026quot;(.+).(.+)\u0026quot;) %\u0026gt;% #pivot from wide to long unite(\u0026quot;react_prod\u0026quot;, reactant:product, na.rm = TRUE, remove = F) %\u0026gt;% #unite the reactant and product columns into one column called react_prod left_join(activities) %\u0026gt;% #join with the activities data filter(!is.na(activity)) %\u0026gt;% #remove any activities with NA values mutate(logQ = if_else(!is.na(reactant), -abs(coeff)*activity, abs(coeff)*activity)) %\u0026gt;% #multiply each species by its stoichiometric coefficient group_by(rxn.number, Site) %\u0026gt;% #group on the reaction number and site summarise(logQ = sum(logQ)) #calculate logQ  Finally, it‚Äôs time to calculate Gibbs free energy yield from each reaction!\ndeltaG \u0026lt;- logK %\u0026gt;% left_join(logQ) %\u0026gt;% #join the logK and logQ tables left_join(reactions %\u0026gt;% select(rxn.number, e.transfer, reactant.a)) %\u0026gt;% #add the reaction number, number of electrons transferred, and minerals from each reaction rename(mineral = \u0026quot;reactant.a\u0026quot;) %\u0026gt;% #rename reactant.a to mineral for clarity mutate(deltaG = (-2.303*8.314*283.45*(LogK-logQ))/(e.transfer*1000)) #calculate deltaG for each reaction at each site  Lets‚Äôs take a look at the deltaG table:  {\"x\":{\"url\":\"/post/thermodynamic_modeling/index_files/figure-html//widgets/widget_unnamed-chunk-13.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}\nNow, let‚Äôs plot the data and see which metabolic reactions with minerals are energetically favorable under in situ conditions at DeMMO:\ndeltaG %\u0026gt;% ggplot(aes(deltaG, reorder(rxn.number, -deltaG), shape=Site, group=rxn.number)) + theme_gray() + geom_line(aes(color=mineral), size=2.5, alpha=0.6) + #color each line spanning the deltaG values for the six sites by the mineral in the reaction geom_point() + scale_shape_manual(values = c(0,1,2,15,16,17)) + #manually set the shapes for each point to denote the six different sites scale_x_reverse() + #reverse the x-axis to show exergonic values on the right, this is standard for this kind of data labs(x=expression(Delta~G[r]~\u0026#39;kJ/mol\u0026#39;~e^{textstyle(\u0026quot;-\u0026quot;)})) + #generate the axis labels ylab(\u0026quot;Reaction #\u0026quot;) + geom_vline(xintercept = 0, linetype=\u0026quot;dotted\u0026quot;, color = \u0026quot;black\u0026quot;) + #add a vertical line at zero for reference theme(legend.position = c(.1, .6), legend.text=element_text(size=8), legend.title = element_text(size=8, face=\u0026quot;bold\u0026quot;)) + #position the legend on the left theme(legend.key.size = unit(0.2, \u0026quot;in\u0026quot;)) #resize the legend to make it fit  Everything that plots to the right of the dotted line is exergonic, while everything to the left of the dotted line is endergonic. The most exergonic and therefore the most energetically favorable reactions occur with the mineral pyrolusite, followed by pyrite. If you‚Äôre curious which reactant was coupled to these minerals for each reaction, refer back to the reactions table above! üë©‚Äçüî¨\nFork Me  ","date":1592705656,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1592705656,"objectID":"d57ecf864ce8c579260ea34f6cfada4d","permalink":"https://www.caitlincasar.com/post/thermodynamic_modeling/","publishdate":"2020-06-20T21:14:16-05:00","relpermalink":"/post/thermodynamic_modeling/","section":"post","summary":"Are you curious what sorts of metabolic processes might be occurring at your study site? Using in situ geochemical data, you can model the Gibbs free energy available from metabolic reactions and predict which metabolisms are energetically favorable!","tags":["ggplot","tidyverse","CHNOSZ"],"title":"Thermodynamic Modeling with CHNOSZ","type":"post"},{"authors":null,"categories":["R"],"content":" Wanna create and host your own site for free? I‚Äôll show you how I created and hosted my site caitlincasar.com! We‚Äôll go over the two basic tools I used: the blogdown package in R and Github Pages.\nGetting started with Git and Github The first thing we need to do is get set up on Github. If you‚Äôre not familiar with Github, it‚Äôs a Git repository hosting service that also provides version control and collaboration features. Git is the version control system that tracks changes in your files and makes it easy to update your repository on Github. If this doesn‚Äôt make sense now, that‚Äôs ok! Once you see Git and Github in action it should be clear why we‚Äôre using it.\n Install Git   Next, create an account on Github. If you set up a student account, you‚Äôll have access to private repositories (i.e.¬†if you need to backup unpublished data or code) - I highly recommend this!   Now, you‚Äôll need to set your credentials in Git. Open up your Mac terminal or gitbash on PC, then use the git config commands to configure your username and email. This will ensure that you have the ability to modify repositories on Github.   #set your user name on github git config --global user.name \u0026quot;John Doe\u0026quot; #set your user email on github git config --global user.email johndoe@example.com  The top four commands you‚Äôll need to use git are status, add, commit, and push. Here‚Äôs an example of how to use these - we‚Äôll come back to this in a bit.   #check the status of your local repo git status #add all new untracked files to the queue git add . #commit your changes and add a short description git commit -a -m \u0026quot;short description here\u0026quot; #push your changes to the repo on the Github server git push   Blogdown To create the site, I used a package in R called blogdown. This is a great package that makes it really easy to create and update your site using R markdown. If you‚Äôre using RStudio with blogdown, you can serve the site locally and preview it right in your RStudio viewer window. It‚Äôs super easy to customize your CSS (cascading style sheet) - this is an easy way to change the styling of HTML elements across your site, such as font styles or colors. Blogdown integrates Hugo, a static site generator that has tons of awesome themes ready to go! For this site, I chose the Hugo Academic theme. I‚Äôll walk you through the basics of blogdown, then show you how to create a new blog post!\n Install R and Rstudio   Install the blogdown package. You can do this in RStudio by entering the following in the console window in RStudio:   install.packages(\u0026quot;blogdown\u0026quot;)  To use Hugo in blogdown, install Hugo:   blogdown::install_hugo()  To generate the Hugo academic theme template site, run the following line in your RStudio console.   blogdown::new_site(theme = \u0026#39;gcushen/hugo-academic\u0026#39;)  To preview your site in the Viewer window, you can either select ‚ÄúServe site‚Äù from the Addins dropdown menu in RStudio, or run the following in your console:   blogdown::serve_site()  Set your config.toml file parameters relativeURLs to false and baseurl to your username.github.io or custom domain name.    When you are ready to build your site to HTML format for web hosting, run the following in your console:   blogdown::hugo_build() Check out your Files window in RStudio. You should see a list of files and directories similar to this:\nThe content folder contains the markdown files used to build the site. The public folder contains the files generated by the hugo_build function.\n I version control my code used to generate my site - in case I break something, I can easily revert back to a working version. To do this, create a git repo for your code by running the following in your terminal:   #change directories to the blodgown directory you created. For example, if you have a directory called \u0026quot;blogdown_site\u0026quot; on your desktop: cd ~/Desktop/blogdown_site #initialize a git repository in the directory git init #add all the files to the queue git add . #commit the changes and add a short message git commit -a -m \u0026quot;init commit\u0026quot;  Now you have a local repository. In order to host that repo on Github, go to github.com and create a new repository by clicking the green ‚Äúnew‚Äù button in the top right. Don‚Äôt initialize a README file. Give your repo a name, for example ‚Äúmy_website‚Äù. Then click ‚ÄúCreate repository‚Äù at the bottom.  In your terminal, run the following: #push your repo to the Github server - note that \u0026#39;username\u0026#39; should be replaced with your Github username and \u0026#39;my_website\u0026#39; should be replaced with the name of the repo you created on Github. git remote add origin https://github.com/username/my_website git push -u origin master  You can see my blogdown code repo here. Now you‚Äôre ready to host your site online! I host my site for free on Github Pages. This generates a domain in the format ‚Äòyour_github_user_name.github.io‚Äô. It‚Äôs affordable and easy to mask this domain with a custom domain of your choice. I bought my domain on Google domains for an annual fee of $12. This is totally optional - if this interests you, refer to my guide at the end of this post under ‚ÄòUsing a custom domain‚Äô!    First you‚Äôll need to create a new repo named username.github.io. Don‚Äôt initialize it with a README file. To create my site, I created a repo using my Github user name ‚Äòcaitlincasar‚Äô on Github called caitlincasar.github.io. You can see this repo here.    Next, initialize a repo in your public folder in your blogdown directory and push the repo to your github.io repo:    #change directories into your public folder - this is where the site builds to when you run blogdown::hugo_build() cd ~/Desktop/blogdown_site/public #initialize a git repository in the directory git init #add all the files to the queue git add . #commit the changes and add a short message git commit -a -m \u0026quot;init commit\u0026quot; #push your repo to the github server git remote add origin https://github.com/username/username.github.io git push -u origin master  To view your site, go to https://username.github.io/ in your web browser.  Create a new post  We‚Äôre finally ready to create a new post! Run the following in your RStudio console: #run the blogdown new_post function to generate a new markdown file in the post directory with today\u0026#39;s date blogdown::new_post(title = \u0026quot;my blog post title\u0026quot;, subdir=\u0026quot;post/my_blog_post_directory\u0026quot;, date = \u0026quot;June 9 2020\u0026quot;)  The Hugo academic theme will add an image next to your post on the home page. To do this, add the image you want to be associated with your post inside the new directory you just created - in this example the directory is called ‚Äúmy_blog_post_directory‚Äù. Name the image ‚Äúfeatured‚Äù, as in ‚Äúfeatured.jpg‚Äù. Then, rename your new markdown file ‚Äúindex‚Äù, as in ‚Äúindex.Rmd‚Äù.  Open up the markdown file you just created. You can do this from RStudio by navigating to the file in the Files window pane via the following path: content \u0026gt;\u0026gt; post \u0026gt;\u0026gt;my_blog_post_directory. Then double click on the markdown file.  To preview your new post, click on the Viewer tab. You should see something like this:  You should edit the header to include your post name, date of the post, summary, etc. Here‚Äôs an exaple of how to modify the header: --- title: my blog post title author: ~ date: June 9 2020 slug: June 9 2020-my blog post title categories: [\u0026quot;Diversity\u0026quot;] #add categories for your post inside the brackets tags: [\u0026quot;#BLM\u0026quot;, \u0026quot;equity\u0026quot;] #add tags inside the brackets subtitle: \u0026#39;This is my post!\u0026#39; summary: \u0026#39;Some info here about this post...This is what will be displayed on the home page.\u0026#39; authors: [Caitlin] #add your name inside these brackets to indicate who authored the post lastmod: \u0026#39;2020-06-09T15:36:45-05:00\u0026#39; featured: no image: caption: \u0026#39;\u0026#39; focal_point: \u0026#39;\u0026#39; preview_only: no projects: [] ---  Now you‚Äôre ready to add content to your post. Add Rmarkdown formatted text below the header in your markdown file, including images, hyperlinks, plots, code chunks, videos, and more! Here‚Äôs an example of some basic content: --- title: my blog post title author: ~ date: June 9 2020 slug: June 9 2020-my blog post title categories: [\u0026quot;Diversity\u0026quot;] #add categories for your post inside the brackets tags: [\u0026quot;#BLM\u0026quot;, \u0026quot;equity\u0026quot;] #add tags inside the brackets subtitle: \u0026#39;This is my post!\u0026#39; summary: \u0026#39;Some info here about this post...This is what will be displayed on the home page.\u0026#39; authors: [Caitlin] #add your name inside these brackets to indicate who authored the post lastmod: \u0026#39;2020-06-09T15:36:45-05:00\u0026#39; featured: no image: caption: \u0026#39;\u0026#39; focal_point: \u0026#39;\u0026#39; preview_only: no projects: [] --- Hello! This is my *first* blog post! I am **very** excited to share my post with you. I learned how to make this post [here](https://caitlincasar.com/post/blogdown/). ## Subheader This is a new section under a subheader. I can make an ordered list: 1. This is item 1 2. This is item 2 3. And this is item 3!  This is great resource for more of the Rmarkdown basics.  Once you‚Äôre done creating your post, just push your changes to Github and you‚Äôre done! #change directories into your public folder - this is where the site builds to when you run blogdown::hugo_build() cd ~/Desktop/blogdown_site/public #add the new file git add . #commit the changes git commit -a -m \u0026quot;adding Caitlin\u0026#39;s new blog post\u0026quot; #push the changes to the Github server git push  Now you can see your awesome new post online! Hooray! üê∏  Using a custom domain Don‚Äôt like the github.io subdomain and TLD (top-level domain)? You can buy your own on Google domains! I pay a $12 annual fee for caitlincasar.com. We‚Äôll walk through the steps here:\n Go to Google domains and search for a domain name to see if it‚Äôs available.    Select the domain you want, then add it to your shopping cart.    Go to your shopping cart and click on the blue ‚Äòcheck out‚Äô button to review your purchase. Make sure your contact info is correct and enter your credit card, then click the blue ‚Äòbuy‚Äô button.    Next, go to your google domains account and select ‚Äòmy domains‚Äô on the left side panel. Then select the ‚Äòmanage‚Äô link next to your domain.    Click on ‚ÄòDNS‚Äô on the left side panel. Then select ‚ÄòUse the Google Domains name servers‚Äô. Then click the blue ‚Äòsave‚Äô button.    Scroll to the bottom of the page and create an alias for your domain, then click the blue ‚ÄòAdd‚Äô button. You can use one of four IP addresses for Github:   185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153    Note:  Github Pages recommends creating a CNAME record which I didn‚Äôt do. For more info on this, see their documentation here.   You should create a record for both your root domain (caitlincasar.com) and your www subdomain (www.caitlincasar.com).  Finally, we‚Äôll need to update the domain name on Github. Navigate to your username.github.io repo, then select ‚ÄòSettings‚Äô.    Scroll down to the Github Pages section and enter your custom domain name. It make take a few hours for your new domain name to register, after which you‚Äôll be able to check the box under ‚ÄòEnforce HTTPS‚Äô. This enables https encryption on your site to prevent man-in-the-middle attacks.     Note:  I ran into an issue where only my root domain caitlincasar.com had HTTPS enabled, and my www subdomain was not secure. To fix this, I deleted caitlincasar.com from my custom domain on my Github repo. Then I entered www.caitlincasar.com as my custom domain, then re-enabled HTTPS. This enabled HTTPS on both the root and www subdomain. This seems to be some sort of bug that I found referenced here, and there are multiple solutions for dealing with it.   Pull your domain name changes from your Github repo to your local repo, commit any changes you made such as a new blog post, then push it to Github.   #change directories into your public folder - this is where the site builds to when you run blogdown::hugo_build() cd ~/Desktop/blogdown_site/public #pull in your remote domain name changes from Github git pull #add any new files git add . #commit the changes git commit -a -m \u0026quot;adding Caitlin\u0026#39;s new blog post\u0026quot; #push the changes to the Github server git push  You should now be able to see your site when you navigate to your custom domain in your web browser. Congrats on creating and hosting your own site! Feel free to comment below with any comments/questions üòé  ","date":1591755256,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591755256,"objectID":"15f601f83218bd1c0681b98065fa1446","permalink":"https://www.caitlincasar.com/post/blogdown/","publishdate":"2020-06-09T21:14:16-05:00","relpermalink":"/post/blogdown/","section":"post","summary":"Wanna create and host your own site for free? I‚Äôll show you how I created and hosted my site caitlincasar.com! We‚Äôll go over the two basic tools I used: the blogdown package in R and Github Pages.","tags":["blogdown","git","github","hugo"],"title":"Create your own site with blogdown in R","type":"post"},{"authors":null,"categories":["R"],"content":"    This is the one of several tutorials I‚Äôm putting together for making figures that are common in microbial ecology. Today we‚Äôll create an interactive NMDS plot for exploring your microbial community data. NMDS, or Nonmetric Multidimensional Scaling, is a method for dimensionality reduction. This works great for high demensional datasets like microbial communities and makes it visually easy to compare lots of communities to each other. We‚Äôre using NMDS rather than PCA (principle coordinates analysis) because this method can accomodate the Bray-Curtis dissimilarity distance metric, which is better suited for our community data than Euclidean distance. For this tutorial I‚Äôm using data and code from my publication in Geobiology.\nFirst we‚Äôll need to set up our environment in R:\n#load libraries pacman::p_load(tidyverse, plotly, vegan) Next, read the OTU data into a dataframe. We can pull the data directy from Github by reading the raw file. You can preview the data in the table below this code chunk.\n#read the data into a dataframe otu_table \u0026lt;- read_delim(\u0026quot;https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/DeMMO136_Dec2015toApril2018_noChimera_otuTable_withTaxa_d10000.txt\u0026quot;, delim=\u0026quot;\\t\u0026quot;, comment = \u0026quot;# \u0026quot;) metadata \u0026lt;- read_csv(\u0026quot;https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/metadata.csv\u0026quot;)   {\"x\":{\"url\":\"/post/making_figs_2/index_files/figure-html//widgets/widget_unnamed-chunk-3.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]} First we need to normalize our data.\notu_norm \u0026lt;- otu_table %\u0026gt;% select(-taxonomy) %\u0026gt;% mutate_at(vars(-`#OTU ID`), funs(./sum(.)*100)) %\u0026gt;% #normalize to relative abundance gather(sample_id, abundance, `7.DeMMO1.Steri.050917`:`18.800.DitchFluid.041818`) %\u0026gt;% spread(key = `#OTU ID`,value = \u0026#39;abundance\u0026#39;) %\u0026gt;% right_join(metadata %\u0026gt;% select(sample_id)) %\u0026gt;% column_to_rownames(\u0026quot;sample_id\u0026quot;) Now, let‚Äôs use the metaMDS function in vegan to perform NMDS. We‚Äôll use the default distance metric, Bray-Curtis dissimilarity, and set the argument k to 2 dimensions.\nNMDS_ord \u0026lt;- otu_norm %\u0026gt;% metaMDS(k=2) Now let‚Äôs pull out the NMDS coordinates for axes MDS1 and MDS2 for plotting purposes.\n#pull out ordination and vector coordinates for plotting NMDS_coords \u0026lt;- NMDS_ord[[\u0026quot;points\u0026quot;]] %\u0026gt;% as_tibble(rownames = \u0026quot;sample_id\u0026quot;) %\u0026gt;% left_join(metadata) We can create a dictionary of shapes for our plot like this:\n#make shape dictionary for ploting shape_dict \u0026lt;- c(0, 15, 15, 1, 19, 19, 2, 17, 17, 5, 5) names(shape_dict) \u0026lt;- c(\u0026quot;D1.fluid\u0026quot;, \u0026quot;D1.inert.control\u0026quot;, \u0026quot;D1.mineral\u0026quot;, \u0026quot;D3.fluid\u0026quot;, \u0026quot;D3.inert.control\u0026quot;, \u0026quot;D3.mineral\u0026quot;, \u0026quot;D6.fluid\u0026quot;, \u0026quot;D6.inert.control\u0026quot;, \u0026quot;D6.mineral\u0026quot;,\u0026quot;D3.cont.control\u0026quot;, \u0026quot;ambient.control\u0026quot;) Now let‚Äôs plot the data!\n#NMDS plot with controls NMDS_plot \u0026lt;- NMDS_coords %\u0026gt;% ggplot(aes(MDS1, MDS2)) + geom_point(size=2, alpha=0.8, aes(shape=site.type, color=site.type, label = sample_id)) + scale_shape_manual(values=shape_dict) + theme(legend.key.size = unit(.5, \u0026quot;cm\u0026quot;)) #visualize interactive plot ggplotly(NMDS_plot)  Now we have a nice interactive plot for exploring the ordination. Easy-peasy! üòé\nFork Me  ","date":1591064056,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591064056,"objectID":"c8081ab819f9085ca9171082af45a1fe","permalink":"https://www.caitlincasar.com/post/making_figs_2/","publishdate":"2020-06-01T21:14:16-05:00","relpermalink":"/post/making_figs_2/","section":"post","summary":"This is the one of several tutorials I‚Äôm putting together for making figures that are common in microbial ecology. Today we‚Äôll create an interactive NMDS plot for exploring your microbial community data.","tags":["ggplot","tidyverse","plotly","vegan"],"title":"Making figures for microbial ecology: Interactive NMDS plots","type":"post"},{"authors":null,"categories":["R"],"content":"    Fork  This is the first of several tutorials I‚Äôm putting together for making figures that are common in microbial ecology. Today we‚Äôll start with an interactive bar plot for exploring your microbial community data. For this tutorial I‚Äôm using data and code from my publication in Geobiology. You can fork the repo by clicking the button above!\nTo generate the data, we sequenced DNA from microbial communities at our study site DeMMO. The raw sequence data was processed with QIIME to produce an OTU table. OTUs, or operational taxonomic units, are bins that differentiate sequences at a 97% similarity threshold. For our purposes, you can think of an OTU as a species of bacteria or archaea. As a microbial ecologist, you might want to compare the taxonomic compositions of your communities. Let‚Äôs make a cool html bar plot to explore our microbial community data!\nBefore we get started, you‚Äôll need to set up your environment in R. This code depends on the packages being loaded here:\n#load libraries pacman::p_load(tidyverse, plotly, randomcoloR) Next, read the OTU data into a dataframe. We can pull the data directy from Github by reading the raw file. You can preview the data in the table below this code chunk.\n#read the data into a dataframe otu_table \u0026lt;- read_delim(\u0026quot;https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/DeMMO136_Dec2015toApril2018_noChimera_otuTable_withTaxa_d10000.txt\u0026quot;, delim=\u0026quot;\\t\u0026quot;, comment = \u0026quot;# \u0026quot;) metadata \u0026lt;- read_csv(\u0026quot;https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/metadata.csv\u0026quot;) #store the taxonomy for each OTU taxonomy \u0026lt;- otu_table %\u0026gt;% select(`#OTU ID`, taxonomy) %\u0026gt;% mutate(tax = gsub(\u0026quot;Gammaproteobacteria; D_3__Betaproteobacteriales\u0026quot;, \u0026quot;Betaproteobacteria; D_3__Betaproteobacteriales\u0026quot;, taxonomy), #fix taxonomy for Beta\u0026#39;s, taxonomy = str_remove_all(tax, \u0026quot;D_0__| D_1__| D_2__| D_3__| D_4__| D_5__| D_6__\u0026quot;)) %\u0026gt;% separate(taxonomy ,sep=\u0026#39;;\u0026#39;,c(\u0026quot;domain\u0026quot;, \u0026quot;phylum\u0026quot;, \u0026quot;class\u0026quot;, \u0026quot;order\u0026quot;, \u0026quot;family\u0026quot;, \u0026quot;genus\u0026quot;, \u0026quot;species\u0026quot;)) %\u0026gt;% gather(level, taxonomy, domain:species)  {\"x\":{\"url\":\"/post/making_figs/index_files/figure-html//widgets/widget_unnamed-chunk-3.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]} We want to look at the community compositions, so first let‚Äôs normalize and reshape the data.\nabundance_table \u0026lt;- otu_table %\u0026gt;% select(-taxonomy) %\u0026gt;% mutate_at(vars(-`#OTU ID`), funs(./sum(.)*100)) %\u0026gt;% #normalize to relative abundance gather(sample_id, abundance, `7.DeMMO1.Steri.050917`:`18.800.DitchFluid.041818`)   {\"x\":{\"url\":\"/post/making_figs/index_files/figure-html//widgets/widget_unnamed-chunk-5.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]} For plotting purposes, let‚Äôs pick a subset of samples.\nbarplot_samples \u0026lt;- c(\u0026quot;12.DeMMO1.steri.041818\u0026quot;, \u0026quot;26.DeMMO1.SC1.top.041818\u0026quot;, \u0026quot;22.DeMMO1.C.top.041818\u0026quot;, \u0026quot;23.DeMMO1.D.top.041818\u0026quot;, \u0026quot;24.DeMMO1.E.top.041818\u0026quot;, \u0026quot;27.DeMMO1.SC2.top.041818\u0026quot;, \u0026quot;34.DeMMO1.SC10.top.041818\u0026quot;, \u0026quot;45.DeMMO1.7.top.041818\u0026quot;, \u0026quot;46.DeMMO1.8.top.041818\u0026quot;, \u0026quot;47.DeMMO1.9.top.041818\u0026quot;, \u0026quot;14.DeMMO3.steri.041718\u0026quot;, \u0026quot;51.DeMMO3.A.top.041718\u0026quot;, \u0026quot;27.DeMMO3.T8.top.051117\u0026quot;, \u0026quot;53.DeMMO3.C.top.041718\u0026quot;, \u0026quot;54.DeMMO3.D.top.041718\u0026quot;, \u0026quot;55.DeMMO3.E.top.041718\u0026quot;, \u0026quot;39.DeMMO3.1.top.041718\u0026quot;, \u0026quot;40.DeMMO3.2.top.041718\u0026quot;, \u0026quot;41.DeMMO3.3.top.041718\u0026quot;, \u0026quot;56.DeMMO3.F.top.041718\u0026quot;, \u0026quot;12.DeMMO6.Steri#2.051017\u0026quot;, \u0026quot;13.DeMMO6.T1.top.051017\u0026quot;, \u0026quot;15.DeMMO6.T2.top.051017\u0026quot;, \u0026quot;17.DeMMO6.T3.top.051017\u0026quot;, \u0026quot;19.DeMMO6.T4.top.051017\u0026quot;, \u0026quot;21.DeMMO6.T5.top.051017\u0026quot;, \u0026quot;24.DeMMO6.T6.bottom.051017\u0026quot;)  Now, let‚Äôs take a look at the phylum level abundances for each sample.\ntaxon_abundance_table \u0026lt;- abundance_table %\u0026gt;% left_join(taxonomy) %\u0026gt;% filter(sample_id %in% barplot_samples \u0026amp; level == \u0026quot;phylum\u0026quot;) %\u0026gt;% mutate(taxonomy = if_else(is.na(taxonomy), \u0026quot;Unassigned\u0026quot;, taxonomy)) Let‚Äôs make a custom color palette for our phyla.\nphylum_color \u0026lt;- distinctColorPalette(k = length(unique(taxon_abundance_table$taxonomy))) names(phylum_color) \u0026lt;- unique(taxon_abundance_table$taxonomy) And now, let‚Äôs create a stacked bar plot for each site.\nbar_plot \u0026lt;- taxon_abundance_table %\u0026gt;% left_join(metadata) %\u0026gt;% group_by(site, experiment.type, taxonomy) %\u0026gt;% summarise(abundance = sum(abundance)) %\u0026gt;% ungroup() %\u0026gt;% mutate(experiment.type = factor(experiment.type, levels = c(\u0026quot;fluid\u0026quot;, \u0026quot;inert.control\u0026quot;, \u0026quot;pyrolusite\u0026quot;, \u0026quot;pyrite\u0026quot;,\u0026quot;hematite\u0026quot;,\u0026quot;magnetite\u0026quot;,\u0026quot;siderite\u0026quot;,\u0026quot;gypsum\u0026quot;,\u0026quot;muscovite\u0026quot;,\u0026quot;calcite\u0026quot;))) %\u0026gt;% ggplot(aes(fill=taxonomy, y=abundance, x=experiment.type)) + geom_bar(stat=\u0026#39;identity\u0026#39;, position=\u0026#39;fill\u0026#39;) + scale_fill_manual(values=phylum_color) + coord_flip() + theme(axis.title = element_blank(), legend.title = ggplot2::element_blank(), legend.text = ggplot2::element_text(size = 8), legend.key.size = unit(0.5, \u0026quot;cm\u0026quot;)) + facet_grid(cols = vars(site), switch = \u0026quot;y\u0026quot;) + guides(fill = guide_legend(ncol = 1)) Finally, let‚Äôs make it easier to explore our data with an html version of our bar plot!\nggplotly(bar_plot)  Ta da! You now have an interactive html version of your plot that you can view in your web browser - just double click the file in your file explorer and it will automatically open. These files are portable, so you can email them to your collaborators and explore the data together. Stay tuned for upcoming tutorials on making figures for microbial ecology!\n","date":1590977656,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590977656,"objectID":"f045681c4451dca64f095b86e8d6b70d","permalink":"https://www.caitlincasar.com/post/making_figs/","publishdate":"2020-05-31T21:14:16-05:00","relpermalink":"/post/making_figs/","section":"post","summary":"Fork  This is the first of several tutorials I‚Äôm putting together for making figures that are common in microbial ecology. Today we‚Äôll start with an interactive bar plot for exploring your microbial community data.","tags":["ggplot","tidyverse","plotly"],"title":"Making figures for microbial ecology: Interactive bar plots","type":"post"},{"authors":["Casar, C. P., Kruger, B. K., Flynn, T. M., Masterson, A. L., Momper, L. M., Osburn, M. R."],"categories":null,"content":"Supplementary code.\n","date":1580515200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1580515200,"objectID":"287cbfc6cdbf53417e8bb56f4a5bde96","permalink":"https://www.caitlincasar.com/publication/casar2020/","publishdate":"2020-02-01T00:00:00Z","relpermalink":"/publication/casar2020/","section":"publication","summary":"Deep subsurface biofilms are estimated to host the majority of prokaryotic life on Earth, yet fundamental aspects of their ecology remain unknown. An inherent difficulty in studying subsurface biofilms is that of sample acquisition. While samples from marine and terrestrial deep subsurface fluids have revealed abundant and diverse microbial life, limited work has described the corresponding biofilms on rock fracture and pore space surfaces. The recently established Deep Mine Microbial Observatory (DeMMO) is a long‚Äêterm monitoring network at which we can explore the ecological role of biofilms in fluid‚Äêfilled fractures to depths of 1.5 km. We carried out in situ cultivation experiments with single minerals representative of DeMMO host rock to explore the ecological drivers of biodiversity and biomass in biofilm communities in the continental subsurface. Coupling cell densities to thermodynamic models of putative metabolic reactions with minerals suggests a metabolic relationship between biofilms and the minerals they colonize. Our findings indicate that minerals can significantly enhance biofilm cell densities and promote selective colonization by taxa putatively capable of extracellular electron transfer. In turn, minerals can drive significant differences in biodiversity between fluid and biofilm communities. Given our findings at DeMMO, we suggest that host rock mineralogy is an important ecological driver in deep continental biospheres.","tags":["Geobiology","Astrobiology","Biofilms"],"title":"Mineral‚Äêhosted biofilm communities in the continental deep subsurface, Deep Mine Microbial Observatory, SD, USA","type":"publication"},{"authors":["Osburn, M. R., Kruger, B. K.,  Masterson, A. L., Casar, C. P., Amend, J. P."],"categories":null,"content":"","date":1561939200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561939200,"objectID":"8ebec3b2b2a5a659e35fb7c9a6247f83","permalink":"https://www.caitlincasar.com/publication/osburn2019/","publishdate":"2019-07-01T00:00:00Z","relpermalink":"/publication/osburn2019/","section":"publication","summary":"Identifying temporal trends in deep subsurface geomicrobiology is challenging as it requires both in-depth knowledge of in situ geochemistry and innovative sampling techniques. Subsurface microbial dynamics can only be understood in the context of accompanying geochemistry, and thus, it is imperative to first characterize available microbial habitats and their temporal evolution. Also, samples must be acquired in a clean and consistent manner to avoid artifacts stemming from surface microbes, atmospheric contamination, or external temporal variability. To facilitate these ends, we established the Deep Mine Microbial Observatory (DeMMO) in the Sanford Underground Research Facility (SURF), Lead, SD, USA to sample naturally draining fracture fluids at six spatially distributed sites from the shallowest (800 ft) to the deepest accessible (4,850 ft) depths. Here we report on the installation and subsequent two-year aqueous geochemical monitoring campaign of the DeMMO network. DeMMO fluids have distinct geochemical compositions showing differences with respect to depth, proximity to mine workings, and host rock geology. Most measurements were remarkably stable through the two-year sampling window, illustrating temporal stability of the water sources to each site, including over induced perturbations such as drilling. Interestingly, there was a lack of seasonality even at shallowest sites, indicating limited direct communication with modern meteoric waters. Patterns of fluid geochemistry are distinct between sites, and largely predictable based upon our understanding of the lithology and inorganic geochemistry of the host rocks. Thermodynamic calculations suggest that both inorganic and organic redox reactions can yield energy to, respectively, lithotrophic and heterotrophic microorganisms in this system, although the yields vary considerably by site. We conclude that each DeMMO site represents a unique window into the deep subsurface of SURF, accessing distinct fluid pockets, aqueous geochemistry, and dissolved gas geochemistry ‚Äì providing stable conditions that facilitate long-term habitation of subsurface fractures and water pockets by distinct microbial communities.","tags":["Geobiology","Astrobiology","Geochemistry"],"title":"Establishment of the Deep Mine Microbial Observatory (DeMMO), South Dakota, USA, a Geochemically Stable Portal Into the Deep Subsurface","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic  Academic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click  PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions?  Ask\n Documentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://www.caitlincasar.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Meyer-Dombard, D. R., Casar, C. P., Simon, A. G., Cardace, D., Schrenk, M. O., Arcilla, C. A."],"categories":null,"content":"","date":1517443200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1517443200,"objectID":"7cf5800c112c7bcfa010a441f1f1ba5b","permalink":"https://www.caitlincasar.com/publication/meyer-dombard2018/","publishdate":"2018-02-01T00:00:00Z","relpermalink":"/publication/meyer-dombard2018/","section":"publication","summary":"Terrestrial serpentinizing systems harbor microbial subsurface life. Passive or active microbially mediated iron transformations at alkaline conditions in deep biosphere serpentinizing ecosystems are understudied. We explore these processes in the Zambales (Philippines) and Coast Range (CA, USA) ophiolites, and associated surface ecosystems by probing the relevance of samples acquired at the surface to in situ, subsurface ecosystems, and the nature of microbe-mineral associations in the subsurface. In this pilot study, we use microcosm experiments and batch culturing directed at iron redox transformations to confirm thermodynamically based predictions that iron transformations may be important in subsurface serpentinizing ecosystems. Biofilms formed on rock cores from the Zambales ophiolite on surface and in-pit associations, confirming that organisms from serpentinizing systems can form biofilms in subsurface environments. Analysis by XPS and FTIR confirmed that enrichment culturing utilizing ferric iron growth substrates produced reduced, magnetic solids containing siderite, spinels, and FeO minerals. Microcosms and enrichment cultures supported organisms whose near relatives participate in iron redox transformations. Further, a potential 'principal' microbial community common to solid samples in serpentinizing systems was identified. These results indicate collectively that iron redox transformations should be more thoroughly and universally considered when assessing the function of terrestrial subsurface ecosystems driven by serpentinization.","tags":["CROMO","Geobiology","Biofilms"],"title":"Biofilm Formation and Potential for Iron Cycling in Serpentinization-Influenced Groundwater of the Zambales and Coast Range Ophiolites","type":"publication"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://www.caitlincasar.com/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"https://www.caitlincasar.com/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":null,"categories":null,"content":"  I‚Äôm Caitlin Casar, a data scientist üíæ interested in astrobiology üëΩ. I love coding, graphic design, and hanging out with my two cats, Creme Fraiche and Neko üê±üê±.\nEducation  üéì Ph.D.¬†Earth and Planetary Sciences (2021), Northwestern University\nüéì M.S. Earth and Planetary Sciences (2018), Northwestern University\nüéì M.S. Earth and Environmental Sciences (2015), University of Illinois at Chicago\nüéì B.S. Geology (2012), East Carolina University\n Awards    2018 NASA Earth and Space Science Fellowship     2018 Illinois Space Grant Fellowship     2014 UIC Provost‚Äôs Award     2013 Knourek Scholarship     2011 NAGT Fellowship     Professional Activities    2021 84.51 Data Science Development Program     2020 84.51 Data Science Summer Internship Program     2019 President of NU ACiDS     2018 Midwest Geobiology Symposium Organizing Committee     2018 International Geobiology Field Course     2017 President of NU GeoClub     2016 ECOGEO ‚ÄôOmics Training     2013-15 President of UIC Terra Society     2011 USGS/NAGT Cooperative Field Training Program     2009 ECU Geology Field Camp Manager     Publications    2021 Casar, C. P., Kruger, B. K., Osburn, M. R.     2021 Momper, L. M., Casar, C. P., Osburn, M. R.     2020 Rowe, A. R., Abuyen, K., Lam, B. R., Kruger, B. K., Casar, C. P., Osburn, M. R., El-Naggar, M. Y., Amend, J. P.     2020 Casar, C. P., Kruger, B. K., Flynn, T. M., Masterson, A. L., Momper, L. M., Osburn, M. R.     2019 Osburn, M. R., Kruger, B. K., Masterson, A. L., Casar, C. P., Amend, J. P.     2018 Meyer-Dombard, D. R., Casar, C. P., Simon, A. G., Cardace, D., Schrenk, M. O., Arcilla, C. A.     Press    2021 Life Underground by Michael Gross     2021 Frontiers Science News     2019 Chicago Council on Science and Technology     2018 Underground by Will Hunt     2016 Chicago Tribune     2011 Deepwater Canyons Cruise     Projects    DeMMO Website    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3b3b7c198828df7d02afa2d0c4978d14","permalink":"https://www.caitlincasar.com/about/about/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/about/about/","section":"about","summary":"I‚Äôm Caitlin Casar, a data scientist üíæ interested in astrobiology üëΩ. I love coding, graphic design, and hanging out with my two cats, Creme Fraiche and Neko üê±üê±.","tags":null,"title":"About me","type":"about"}]